#!/bin/bash

APIGEE_ZOOKEEPER_DC_1="dc1n13 dc1n15 dc1n16 dc1n17 dc1n18"
APIGEE_ZOOKEEPER_DC_2="dc2n13 dc2n15 dc2n16 dc2n17 dc2n18"
APIGEE_CASSANDRA_DC_1="dc1n13 dc1n15 dc1n16 dc1n17 dc1n18"
APIGEE_CASSANDRA_DC_2="dc2n13 dc2n15 dc2n16 dc2n17 dc2n18"
APIGEE_OPENLDAP_DC_1="dc1n13"
APIGEE_OPENLDAP_DC_2="dc2n13"
APIGEE_POSTGRESQL_DC_1="dc1n19"
APIGEE_POSTGRESQL_DC_2="dc2n19"
EDGE_POSTGRES_SERVER_DC_1="dc1n19"
EDGE_POSTGRES_SERVER_DC_2="dc2n19"
APIGEE_QPIDD_DC_1="dc1n19 dc1n29"
APIGEE_QPIDD_DC_2="dc2n19 dc2n29"
EDGE_QPID_SERVER_DC_1="dc1n19"
EDGE_QPID_SERVER_DC_2="dc2n19"
EDGE_MANAGEMENT_SERVER_DC_1="dc1n03"
EDGE_MANAGEMENT_SERVER_DC_2="dc2n03"
EDGE_MESSAGE_PROCESSOR_DC_1="dc1n03 dc1n04 dc1n05 dc1n06 dc1n07"
EDGE_MESSAGE_PROCESSOR_DC_2="dc2n03 dc2n04 dc2n05 dc2n06 dc2n07"
EDGE_ROUTER_DC_1="dc1n01 dc1n02"
EDGE_ROUTER_DC_2="dc2n01 dc2n02"
EDGE_SAP_UI_DC_1="dc1n03"
EDGE_SAP_UI_DC_2="dc2n03"
APIGEE_ELASTICSEARCH_DC_1="dc1n10 dc1n11"
APIGEE_ELASTICSEARCH_DC_2="dc2n10 dc2n11"
BAAS_SAP_USERGRID_DC_1="dc1n10 dc1n11"
BAAS_SAP_USERGRID_DC_2="dc2n10 dc2n11"
BAAS_SAP_PORTAL_DC_1="dc1n10 dc1n11"
BAAS_SAP_PORTAL_DC_2="dc2n10 dc2n11"
DCS="dc-1 dc-2"
COMPS="apigee-zookeeper apigee-zookeeper apigee-cassandra apigee-cassandra apigee-openldap apigee-openldap apigee-postgresql apigee-postgresql edge-postgres-server edge-postgres-server apigee-qpidd apigee-qpidd edge-qpid-server edge-qpid-server edge-management-server edge-management-server edge-message-processor edge-message-processor edge-router edge-router edge-sap-ui edge-sap-ui apigee-elasticsearch apigee-elasticsearch baas-sap-usergrid baas-sap-usergrid baas-sap-portal baas-sap-portal"

help(){
        echo ""
        echo "planetctl <action> <target> [<comp>] [--dryrun]"
        echo ""
        echo "Arguments:"
        echo ""
        echo " <action>: start or stop"
        echo " <target>: planet or $DCS"
        echo " <comp>: missing or all or subset of $COMPS"
        echo ""
        echo " <dryrun>: optional, if present the output command will be produced but not executed"
        echo ""
}



if [ "$#" -lt 2 ]
then
        echo "Wrong number of mandatory arguments supplied."
        echo ""
    help
    exit 1
fi


ACTION=$1
TARGET=$2
DRYRUN=$3

if [[ ! ";start;stop;" =~ ";$ACTION;" ]]
then
   echo "Unsupported Action: $ACTION"
   help
   exit 1
fi


if [[ ! "$DCS planet;" =~ "$TARGET" ]]
then
   echo "Unsupported target: $TARGET"
   help
   exit 1
fi
if [[ ! "$DRYRUN" == "" ]]
then
    DRYRUN="echo "
    DRYESC=""
    DRYQUOTE='"'
fi

function command(){
    local op=$1
    local dcs=$2
    local comps=$3

    if [ "$dcs" = "planet" ]; then
        dcs=$DCS
    fi
    if [ "$op" = "stop" ]; then
                # reverse list of components
                comps=$(echo -n "${comps}"|awk '{for (i=NF;i>0;i--){printf $i " "};printf "\n"}')
    fi

    for comp in $comps; do
        for dc in $dcs; do
            if [[ "$DCS" =~ "$dc" ]]; then
                local nodes_ref=$(echo -n "${comp}_${dc}"|awk '{gsub(/-/, "_");print toupper($0)}')
                local nodes=${!nodes_ref}
            
                for node in $nodes; do

                    $DRYRUN ansible $node -a $DRYESC$DRYQUOTE"apigee-service $comp $ACTION$DRYESC$DRYQUOTE"
                    if [[ $? -ne 0 ]]; then exit 1; fi
                done
            fi
        done
        
        echo ""
    done
}

command "$ACTION" "$TARGET" "$COMPS"

